{"version":3,"sources":["plasma.gif","App.js","reportWebVitals.js","index.js"],"names":["App","useState","show","setShow","showR","setShowR","className","Navbar","variant","Brand","href","Nav","Link","Card","Img","src","plasma","alt","Body","Title","Text","ButtonToolbar","Button","onClick","class","frameborder","onmousewheel","width","height","styles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAAe,MAA0B,mC,OC6D1BA,MAxDf,WACE,MAAqBC,oBAAS,GAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAuBF,oBAAS,GAAhC,mBAAOG,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAKC,UAAU,MAAf,UAEE,eAACC,EAAA,EAAD,CAAQD,UAAU,YAAYE,QAAQ,OAAtC,UACF,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,cAAnB,4BACA,cAACC,EAAA,EAAD,CAAKL,UAAU,UAAf,SACE,cAACK,EAAA,EAAIC,KAAL,wBAIA,eAACC,EAAA,EAAD,CAAMP,UAAU,cAAhB,UACA,cAACO,EAAA,EAAKC,IAAN,CAAUN,QAAQ,MAAMO,IAAKC,EAAQC,IAAI,SACvC,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,0CACA,cAACN,EAAA,EAAKO,KAAN,uCAGA,cAACP,EAAA,EAAKO,KAAN,sGAGA,cAACP,EAAA,EAAKO,KAAN,4FAEA,eAACC,EAAA,EAAD,CAAef,UAAU,qBAAzB,UACE,cAACgB,EAAA,EAAD,CAAQC,QAAS,WAAKpB,GAASD,GAAOG,GAAS,IAA/C,SAAyDH,EAAK,sBAAsB,kBACpF,cAACoB,EAAA,EAAD,CAAQC,QAAS,WAAKlB,GAAUD,GAAQD,GAAQ,IAAhD,SAA0DC,EAAM,qBAAqB,4BAKzF,sBAAKE,UAAU,MAAf,UAEMJ,EACA,wBAAQsB,MAAM,iBAAiBT,IAAI,sEACnCU,YAAY,IAAIC,aAAa,GAAGC,MAAM,OAAOC,OAAO,MACpDC,OAAO,qDAEN,KAEDzB,EACA,wBAAQoB,MAAM,iBAAiBT,IAAI,sEACnCU,YAAY,IAAIC,aAAa,GAAGC,MAAM,OAAOC,OAAO,MACpDC,OAAO,qDAAqD,YCtC3DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.abf25db7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plasma.732f512a.gif\";","import './App.css';\nimport React,{useState} from 'react'\nimport {  ButtonToolbar, Button,Card,Navbar,Nav } from 'react-bootstrap'\nimport plasma from './plasma.gif';\n\nfunction App() {\n  const [show,setShow]=useState(false);\n  const [showR,setShowR]=useState(false);\n    \n  return (\n    <div className=\"App\">\n      \n      <Navbar className=\"color-nav\" variant=\"dark\">\n    <Navbar.Brand href=\"/covid-test\">Yavatmal-Cares</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link >Home</Nav.Link>\n      </Nav>\n    </Navbar>\n\n      <Card className=\"text-center\">\n      <Card.Img variant=\"top\" src={plasma} alt=\"test\" />\n        <Card.Body>\n          <Card.Title>Plasma Donation and Request</Card.Title>\n          <Card.Text>\n            Fill one of these forms.\n          </Card.Text>\n          <Card.Text>\n          Our team will match relevant donors and patients and put them in touch with each other.\n          </Card.Text>\n          <Card.Text> We are a group of volunteers helping our city get over this COVID-19 crisis.</Card.Text>\n\n          <ButtonToolbar className=\"custom-btn-toolbar\">\n            <Button onClick={()=>{setShow(!show); setShowR(false)}}>{show?'Close Donation Form':'Donate Plasma'}</Button>\n            <Button onClick={()=>{setShowR(!showR); setShow(false)}}>{showR?'Close Request Form':'Request Plasma'}</Button>\n          </ButtonToolbar>\n        </Card.Body>\n      </Card>\n     \n        <div className=\"Box\">\n              { \n              show?\n              <iframe class=\"airtable-embed\" src=\"https://airtable.com/embed/shr6Pf2Dc3odgIVpc?backgroundColor=yellow\" \n              frameborder=\"0\" onmousewheel=\"\" width=\"100%\" height=\"533\" \n              styles=\"background: transparent; border: 1px solid #ccc;\">\n              </iframe>\n              :null}\n              {\n              showR?\n              <iframe class=\"airtable-embed\" src=\"https://airtable.com/embed/shrlPtj561qqfHLok?backgroundColor=yellow\" \n              frameborder=\"0\" onmousewheel=\"\" width=\"100%\" height=\"533\" \n              styles=\"background: transparent; border: 1px solid #ccc;\"/>:null\n              } \n        </div>\n        \n    \n     \n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}